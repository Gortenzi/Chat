{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","post.js","modal.js","node_modules/js-cookie/dist/js.cookie.js","app.js"],"names":["urlPost","inputEmail","document","querySelector","formInput","getCode","fetch","method","headers","body","JSON","stringify","email","value","response","json","data","console","log","form","reset","addEventListener","settingsModal","querySelectorAll","closeBtn","btns","forEach","el","e","path","currentTarget","getAttribute","classList","remove","add","global","factory","exports","module","define","amd","self","current","Cookies","noConflict","assign","target","i","arguments","length","source","key","defaultConverter","read","slice","replace","decodeURIComponent","write","encodeURIComponent","init","converter","defaultAttributes","set","attributes","expires","Date","now","toUTCString","escape","stringifiedAttributes","attributeName","split","cookie","get","cookies","jar","parts","join","foundKey","Object","create","withAttributes","withConverter","freeze","api","urlPatch","formForName","setName","userName","inputCode","token","mode"],"mappings":";AAAA;AIAA,AJCA;AACA;AIDA,ADDA,AHGA;AGFA,AHGA;AIFA,AFFO,AFKP,IELasB,aAAa,GAAGpB,QAAQ,CAACqB,gBAAT,CAA0B,iBAA1B,CAAtB;ACEN,AHID,WGJWY,MAAV,EAAkBC,OAAlB,EAA2B;ACC5B,AFFO,ACEL,AHIF,IENaZ,MCEJa,EDFY,GAAGnC,ECEtB,MDF8B,CAACqB,gBAAT,CAA0B,YAA1B,CAAjB,ICEEc,OAAP,OAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAAjD,GAA+DA,MAAM,CAACD,OAAP,GAAiBD,OAAO,EAAvF,GACA,OAAOG,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAAvC,GAA6CD,MAAM,CAACH,OAAD,CAAnD,IACCD,MAAM,GAAGA,MAAM,IAAIM,IAAnB,EAA0B,YAAY;AACrC,AHEJ,QGFQC,OAAO,GAAGP,MAAM,CAACQ,OAArB;ADJG,ACKH,AHEJ,IEPalB,IAAI,ACKTY,GDLYnC,ICKL,GAAGiC,CDLU,CAACZ,ICKL,CAACoB,OAAP,GAAiBP,CDLf,CAA0B,KCKJ,EAAtC,IDLgB,CAAb;AFQP,ACVO,IAAMpC,OAAO,GAAG,gDAAhB;ACIPyB,ACIIY,AHGJ,IEPI,ACIAA,CDJCX,MCIM,CDJX,ACIYkB,CDJC,SCIT,CDJUjB,EAAD,ACIY,EDJL,UCIiB;ADH7BA,ACG+BQ,AHIvC,ACXO,ECICR,EAAE,ADJG1B,CCIFoB,CCG4Bc,MAAM,CAACQ,CFPvB,GAAGzC,GEOa,CDH/B,CAAoB,CCG4BwC,EFPtB,CAACvC,GCI3B,CCG+B,CDHF,QDJX,CAAuB,CCIXyB,CAAD,EAAO,WDJlB,CAAnB;ACKS,ACEiD,AHKjE,QEPoBC,IAAI,CCEgDQ,EDF7CT,CAAC,CAACE,GCEoC,UDFtC,CAAgBC,YAAhB,CAA6B,WAA7B,CAAX;AAEAT,ACAkE,AHMlF,ACZO,ICMSA,ADNHlB,CEMT,QFNkB,GAAGF,CCMI,CAACwB,MDNG,CCMjB,ADNkBvB,CCMI,UAACwB,EAAD,ADNb,CAAuB,CCMF,gBDNrB,CAAlB;AGIP,AFGoBA,ACAjB,AHMH,GGV6B,CCCvB0D,CDFJ,CDKkB1D,ACNlB,EDMoB,CAACK,GEHT,GAAG,GFGG,CAAaC,MAAb,CAAoB,QAApB,6BEHpB;AACA,AFGa,ACAZ,AHMD,CGdC,EAQC,CCHIqD,CFCU,ECNf,EAQQ,MCHQ,GAAGpF,GDGC,KCHO,CAACC,aAAT,CAAuB,aAAvB,CAApB;AFIgBmB,ACDO,AHOvB,ACbO,ICOSA,ADPHjB,OAAO,MCOS,CAACqB,OAAd,CAAsB,UAACC,EAAD,EAAQ;AED9C,AFEazB,ACAX,AHMF,ACdoB,IGMdqF,EFEOrF,KEFA,GFEQ,CAACC,aAAT,0BAAwC0B,IAAxC,UAAkDG,CDRxC,QCQV,CAA4DE,GAA5D,CAAgE,QAAhE;AEFA,AFE0E,AFOvF,ACfuB,KCOP,gEEDA;AAAA,AFIH,ACDX,AHOF,AChBuB,GCCf,QCQGW,MAAT,CAAiBC,MAAjB,EAAyB;ACHX,AFKP,ACDL,AHOJ,ACjBuB,CCAvB,QCUS,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;ACJ/B,AFOPvB,ACFH,AHON,AClBuB,QCaN,CAACE,CCFRwB,MDED,ACFO,CDEU,ECFPF,QDEQrB,CCFC,CDEF,ACFGoB,CAAD,CDEK,ACF3B;ACLU,AFQTpB,AFKP,ACnBuB,ECchBA,EAAE,CAACN,gBAAH,CAAoB,OAApB,EAA6B,YAAK;AERzB,AFSRC,ACHF,AHQN,ACpBuB,ICefA,OCHG,IAAI6B,EDGM,CAACzB,ACHhB,IAAgBwB,GDGd,CAAsB,ECHxB,EAAwB,MDGCvB,EAAD,EAAQ;AERhC6D,AFSM7D,ACHJmB,AHQR,ACrBuB,MCgBXnB,EAAE,ACHNmB,CDGOd,GETTwD,EDMQ,CAACrC,GDGH,ACHE,CDGWlB,ACHjB,CCPQ,EDOMiB,CCNLhD,EFSL,CAAoB,ECHJ,CAACiD,ECNJ,CAAChD,ADME,CAApB,CDGI,WETK,CAAuB,uBAAvB,EAAgDU,KADjD;AAEhBI,AFUS,ACJF,AHQP,ACtBuB,KCef,OEPRA,OAAO,AHNwBX,CGMvBY,GAAR,CAAYsE,AHNwB,CAACxF,OGMrC,AHNoC,EAAU;AGOxCyF,AFUG,ACJJ,AHQL,ACpBSlF,GCWF,SELDkF,EHNGlF,MAAM,CGGC,CHHC,EGMEL,IHP2B,IGOnB,CAACC,aAAT,CAAuB,cAAvB,EAAuCU,KAH1C;AAIhBI,AFUK,AFIL,ACpBST,CCSA,WEHTS,EHNST,KGMF,CAACU,CHNQ,EGMhB,AHNkB,CGMNuE,SAAZ;ADMI,AHSJ,ACnBW,WEUA3C,MAAP,eFVuB;AGKxBH,ADMA,AHSH,ACtBkB,eAF4B,eGSnCmB,GAAR,CAAY,YAAZ,EAA0B,WAA1B;ADOD,AHSF,ACnBWrD,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AGIvB+E,AJgBT,ACnBY9E,YGGH8E,IHHG9E,CGHI,GAMC+B,CHHA,EAAE1C,UAAU,CAACY,IGGL4D,GAAR,CAAY,YAAZ,CAND;AAAA,ADcd,AHSF,ACrBgC,eAAf;AGFD,AJwBhB,AC5B8C,aAAV,CAFb;AGMP,AJyBhB,mBIjB+BnE,KAAK,CAAC+E,QAAD,EAAW;AACtC9E,ADMP,AHWF,AChCuB,MEqBjB6C,QCNG7C,MAAM,EAAE,ADMK,GAAG,ICPsB;AAEtCoF,ADMLtC,AHWJ,AC/BcvC,IEoBVuC,IAAI,EAAE,EFpBIvC,EGcL6E,IAAI,EAAE,AHhBQ,IEsBH9E,KCR2B,ADQrC,EAAiB;ACLlBL,ADMH,AHWN,AClCuB,UEuBbK,ICNDL,CDMM,CAAC,CAAD,CAAL,GCNM,EAAE,ADMK,GAAjB,EAAsB;ACLlB,ADMFK,AHWR,ACnCuB,QEwBfA,KAAK,GAAGA,GFZYC,EEYP,CAACwC,ICNF,CDMJ,AFZoB,CEYR,AFZSvC,CEYrB,EAAe,CAAC,AFZJ,CEYZ,CAAR,AFxBe,SGiBL;AAER,ADMH,AHWP,+CIjByC,gDAFvB;AAGP,AJiBX,ACrCuB,gCGoBI,kBAHT;AAIP,ADKL,AHYN,AC1BeC,YAAAA,CEcFH,GF1BU,EE0BL,CAAC0C,OAAN,CAAc,kBAAd,EAAkCC,GCLTkC,KAA3B,UDKE,CAAP;ACTY,ADUb,AHYL,ACzBSzE,KEOgB,OFPhBA,GGAsC,IHA/B,CAACC,GAAR,CAAYF,IAAZ;AGSEP,ADKPgD,AHYJ,ACxCuB,IE4BnBA,KAAK,EAAE,GCLAhD,IAAI,EAAE,MDKII,KAAV,EAAiB;ACLV,ADMZ,AHYN,ACzCuB,aE6BV6C,kBAAkB,CAAC7C,ECNF2E,GDMC,CAAlB,CAA0BjC,GCNrB,IDML,CACL,0CADK,EAELC,kBAFK,CAAP;ACNW,ADUZ,AHSL;AI5B+C,ADOtB,AHsBzB,AC3CuB,GEqBrB,UCPkC,CARpB;AD6Bd,AHSF,AC5CuB;AGMP,AJuChB,AC7CuB;AGcT1C,ADuBZ,AHSF,AC9BWG,YGFGH,AHEHG,OAAO,CGVF,AHUGC,GAAR;AGVK,AJyChB;AIzCgB,ADiCd,AHSF,AChDuB,WEuCZyC,IAAT,CAAeC,GCbW9C,MDa1B,ECbkC,ADaR+C,CCbS9C,IAAT,EApBZ,UDiCd,EAA6C;AAC3C,AHSJ,ACjDuB,aEwCV+C,GAAT,CAAcX,GAAd,EAAmBtC,KAAnB,EAA0BkD,UAA1B,EAAsC;AClC1B,ADmCV,AHSN,AChCQ9D,UEuBE,EFvBFA,KEuBSC,KFvBC,CAACiB,EEuBT,EFvBF,CAAgBC,EEuBM,GFvBtB,QEuBF,EAAqC;ACf5BJ,ADgBP,AHSR,ACnDuB,YG0BRA,IApBC;AAAA,ADqCT,AHSP,6CIzBYN,IAAI,CAACC,SAAL,CAAeK,IAAf,CArBI;AJ+ChB,ACrDuB;AGMP,ADuCV+C,AHSN,ACtDuB,ME6CjBA,UAAU,GAAGlB,MAAM,CAAC,EAAD,EAAKgB,iBAAL,EAAwBE,UAAxB,CAAnB;ACvCU,AJiDhB,ACvDuB;AGMP,ADyCV,AHSN,ACxDuB,UE+Cb,OAAOA,UAAU,CAACC,OAAlB,KAA8B,QAAlC,EAA4C;ACjBvC/C,ADkBH8C,AHSR,ACzDuB,QEgDfA,IClBG9C,MDkBO,CClBA,ADkBC+C,CClBA9C,GAAR,GDkBH,GAAqB,IAAI+C,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAaH,UAAU,CAACC,OAAX,GAAqB,KAA3C,CAArB;AACD,AHSP,AC1DuB;AGMP,AJqDhB,AC3DuB,GAAH;AGMJ,AD4CV,AHUN,UGVUD,UAAU,CAACC,OAAf,EAAwB;AC5Cd,AD6CRD,AHUR,AC7DoB,QEmDZA,UAAU,AFnDL1D,CEmDM2D,MFnDC,CEmDZ,GAAqBD,UAA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,IAAI,CAAC,KAAKC,SAAN,EAAiBf,MAAM,CAAC,EAAD,EAAK,KAAKkB,UAAV,EAAsBA,UAAtB,CAAvB,CAAX;AACD,AHGT,OGjBM;AAeEmB,AHGR,MGHQA,aAAa,EAAE,uBAAUtB,SAAV,EAAqB;AAClC,AHGV,eGHiBD,IAAI,CAACd,MAAM,CAAC,EAAD,EAAK,KAAKe,SAAV,EAAqBA,SAArB,CAAP,EAAwC,KAAKG,UAA7C,CAAX;AACD,AHGT;AGpBM,AHqBN,KGtBW,EAoBL;AACEA,AHER,MGFQA,UAAU,EAAE;AAAElD,AHGtB,QGHsBA,KAAK,EAAEkE,MAAM,CAACI,MAAP,CAActB,iBAAd;AAAT,AHIpB,OGLM;AAEED,AHIR,MGJQA,SAAS,EAAE;AAAE/C,AHKrB,QGLqBA,KAAK,EAAEkE,MAAM,CAACI,MAAP,CAAcvB,SAAd;AAAT,AHMnB;AGRM,AHSN,KG7BW,CAAP;AAyBD,AHKH;AACA;AGJE,AHKF,MGLMwB,GAAG,GAAGzB,IAAI,CAACP,gBAAD,EAAmB;AAAEvB,AHMrC,IGNqCA,IAAI,EAAE;AAAR,AHOnC,GGPgB,CAAd;AACA,AHOF;AACA;AGNE,AHOF,SGPSuD,GAAP;AAED,AHMD,CGtJC,CAAD;AHuJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","export const urlPost = 'https://chat1-341409.oa.r.appspot.com/api/user'\r\nexport const inputEmail = document.querySelector('.input__value')\r\nexport const formInput = document.querySelector('.form__autoconf')\r\n\r\nexport const getCode = async () => {\r\n    try {\r\n        const response = await fetch(urlPost, {\r\n         method: 'POST',\r\n         headers: {\r\n             \r\n           'Content-Type': 'application/json'\r\n           },\r\n           body: JSON.stringify({\r\n            email: inputEmail.value\r\n            })\r\n         });\r\n         const data = await response.json();\r\n     \r\n         console.log(data);\r\n       } catch(error) {\r\n           console.log(error)\r\n    } finally {\r\n        inputEmail.form.reset()\r\n    }\r\n     }\r\n    formInput.addEventListener('submit', getCode )\r\n   ","export const settingsModal = document.querySelectorAll('.settings-modal')\r\nexport const closeBtn = document.querySelectorAll('.close-btn')\r\nexport const btns = document.querySelectorAll('.drop-btn') \r\n\r\nbtns.forEach((el)=> {\r\n        el.addEventListener('click', (e) => {\r\n                let path = e.currentTarget.getAttribute('data-path')\r\n        \r\n                settingsModal.forEach((el) => {\r\n                    el.classList.remove('active');\r\n            })\r\n                settingsModal.forEach((el) => { \r\n             document.querySelector(`[data-target=\"${path}\"]`).classList.add('active')})\r\n            \r\n            })\r\n        });\r\n       \r\n         closeBtn.forEach((el) =>{\r\n       el.addEventListener('click', ()=> {\r\n        settingsModal.forEach((el) => {\r\n            el.classList.remove('active')\r\n          \r\n        })\r\n        }) \r\n    })\r\n","/*! js-cookie v3.0.1 | MIT */\n;\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, (function () {\n    var current = global.Cookies;\n    var exports = global.Cookies = factory();\n    exports.noConflict = function () { global.Cookies = current; return exports; };\n  }()));\n}(this, (function () { 'use strict';\n\n  /* eslint-disable no-var */\n  function assign (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        target[key] = source[key];\n      }\n    }\n    return target\n  }\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n  var defaultConverter = {\n    read: function (value) {\n      if (value[0] === '\"') {\n        value = value.slice(1, -1);\n      }\n      return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n    },\n    write: function (value) {\n      return encodeURIComponent(value).replace(\n        /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n        decodeURIComponent\n      )\n    }\n  };\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n\n  function init (converter, defaultAttributes) {\n    function set (key, value, attributes) {\n      if (typeof document === 'undefined') {\n        return\n      }\n\n      attributes = assign({}, defaultAttributes, attributes);\n\n      if (typeof attributes.expires === 'number') {\n        attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n      }\n      if (attributes.expires) {\n        attributes.expires = attributes.expires.toUTCString();\n      }\n\n      key = encodeURIComponent(key)\n        .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n        .replace(/[()]/g, escape);\n\n      var stringifiedAttributes = '';\n      for (var attributeName in attributes) {\n        if (!attributes[attributeName]) {\n          continue\n        }\n\n        stringifiedAttributes += '; ' + attributeName;\n\n        if (attributes[attributeName] === true) {\n          continue\n        }\n\n        // Considers RFC 6265 section 5.2:\n        // ...\n        // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n        //     character:\n        // Consume the characters of the unparsed-attributes up to,\n        // not including, the first %x3B (\";\") character.\n        // ...\n        stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n      }\n\n      return (document.cookie =\n        key + '=' + converter.write(value, key) + stringifiedAttributes)\n    }\n\n    function get (key) {\n      if (typeof document === 'undefined' || (arguments.length && !key)) {\n        return\n      }\n\n      // To prevent the for loop in the first place assign an empty array\n      // in case there are no cookies at all.\n      var cookies = document.cookie ? document.cookie.split('; ') : [];\n      var jar = {};\n      for (var i = 0; i < cookies.length; i++) {\n        var parts = cookies[i].split('=');\n        var value = parts.slice(1).join('=');\n\n        try {\n          var foundKey = decodeURIComponent(parts[0]);\n          jar[foundKey] = converter.read(value, foundKey);\n\n          if (key === foundKey) {\n            break\n          }\n        } catch (e) {}\n      }\n\n      return key ? jar[key] : jar\n    }\n\n    return Object.create(\n      {\n        set: set,\n        get: get,\n        remove: function (key, attributes) {\n          set(\n            key,\n            '',\n            assign({}, attributes, {\n              expires: -1\n            })\n          );\n        },\n        withAttributes: function (attributes) {\n          return init(this.converter, assign({}, this.attributes, attributes))\n        },\n        withConverter: function (converter) {\n          return init(assign({}, this.converter, converter), this.attributes)\n        }\n      },\n      {\n        attributes: { value: Object.freeze(defaultAttributes) },\n        converter: { value: Object.freeze(converter) }\n      }\n    )\n  }\n\n  var api = init(defaultConverter, { path: '/' });\n  /* eslint-enable no-var */\n\n  return api;\n\n})));\n","import 'regenerator-runtime/runtime'\r\nimport {getCode, inputEmail, formInput } from \"./post.js\"\r\nimport {settingsModal, closeBtn, btns } from \"./modal.js\"\r\nimport Cookies from 'js-cookie'\r\n\r\n\r\nconst urlPatch = 'https://chat1-341409.oa.r.appspot.com/api/user';\r\nconst formForName = document.querySelector('.form__conf')\r\n\r\n\r\nconst setName = async () => {\r\nconst userName = document.querySelector('.settings-input__name').value\r\nconsole.log(userName)\r\nconst inputCode =  document.querySelector('.input__code').value\r\nconsole.log(inputCode)\r\n   Cookies.set('magic-code', 'inputCode' )\r\n   const token = Cookies.get('magic-code')\r\n    try {\r\n        const response = await fetch(urlPatch, {\r\n         method: 'PATCH',\r\n         mode: 'no-cors',\r\n         headers: {\r\n          'Accept': 'aplication/json',\r\n          'Access-Control-Allow-Origin': 'https://chat1-341409.oa.r.appspot.com/api/user',\r\n           'Content-Type': 'application/json',\r\n           'Authorization': `Bearer ${token}`\r\n           },\r\n           body: {'name' : `${userName}`}});\r\n          \r\n            \r\n         const data = await response.json();\r\n     return JSON.stringify(data);\r\n         console.log(data);\r\n       } catch(error) {\r\n           console.log(error)\r\n    } finally {\r\n      // formForName.form.reset()\r\n    }\r\n     }\r\n     formForName.addEventListener('submit', setName )\r\n    "]}